#include <behaviors.dtsi>
#include <behaviors/mouse_keys.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/mouse.h>

#include "zmk-helpers/helper.h"
#include "zmk-helpers/key-labels/34.h"


#define HRML(k2,k3,k4) &ht LALT k2  &ht LCTRL k3  &ht LGUI k4
#define HRMR(k1,k2,k3) &ht RGUI k1  &ht RCTRL k2  &ht RALT k3
#define WHRML(k2,k3,k4) &ht LALT k2  &ht LGUI k3  &ht LCTRL k4
#define WHRMR(k1,k2,k3) &ht RCTRL k1  &ht RGUI k2  &ht RALT k3

#define WIN 0
#define RIG 1
#define LEF 2
#define TRI 3
#define MOUSE 4

&mt {
    flavor = "tap-preferred";
    tapping_term_ms = <200>;
};

&mmv {
   time-to-max-speed-ms = <680>;
   acceleration-exponent=<2>;
};

/* layer and key shortcuts */

/ {

  behaviors {
        ht: hold_tap {
            label = "hold_tap";
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <220>;
            quick-tap-ms = <150>;
            global-quick-tap;
            bindings = <&kp>, <&kp>;
        };
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick_tap_ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
        td_shift: tap_dance_shift {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <500>;
            bindings = <&sk LSHIFT>, <&kp ESC>;
        };
  };

  keymap {
      compatible = "zmk,keymap";

        default_layer {
            bindings = <
            &kp Q          &kp W       &kp E       &kp R        &kp T             &ht LBKT Y     &ht RBKT U   &ht MINUS I      &ht EQUAL O    &ht ENTER P
            &kp A          &kp S       &kp D       &kp F        &ht QMARK G       &kp H          &kp J        &kp K            &kp L          &kp BSPC
            &ht LSHIFT Z   &ht LALT X  &ht LCTRL C &kp V        &kp B             &ht TAB N      &ht UNDER M  &ht RCTRL COMMA  &ht RALT DOT   &ht RSHIFT FSLH
                                                   &lt LEF ESC  &lt RIG SPACE     &lt LEF BSPC   &lt RIG ENTER
            >;
        };

        right_layer {  // 1
            bindings = <
            &kp N1         &kp N2      &kp N3       &kp N4      &kp N5            &kp N6         &kp N7       &kp N8          &kp N9           &kp N0
            &kp DEL        &trans      &ht PSCRN D  &kp INS     &trans            &kp LARW       &kp DARW     &kp UARW        &kp RARW         &trans
            &ht LSHIFT Z   &kp LGUI    &ht LCTRL C  &kp V       &kp B             &ht TAB N      &ht UNDER M  &ht RCTRL COMMA  &kp RGUI      &ht RSHIFT FSLH
                                                    &lt TRI ESC &kp SPACE         &kt TRI BSPC   &kp ENTER
            >;
        };

        left_layer {  // 2
            bindings = <
            &kp EXCL       &kp AT      &kp HASH     &kp DLLR    &kp PRCNT         &kp CARET      &kp AMPS   &kp ASTRK  &kp GRAVE   &ht ENTER TILDE
            &kp DQT        &kp LBKT    &kp LBRC     &kp LPAR    &trans            &kp FSLH       &kp MINUS  &kp EQUAL  &kp COLON   &trans
            &kp SQT        &kp RBKT    &kp RBRC     &kp RPAR    &trans            &trans         &kp UNDER  &kp PLUS   &kp PIPE  &kp QMARK
                                                    &kp ESC     &lt TRI SPACE         &kp BSPC   &lt TRI ENTER
            >;
        };

        tri_layer {  // 3
            bindings = <
            &bt BT_CLR      &kp F2     &kp F3      &kp F4       &bt BT_SEL 0      &bt BT_SEL 2   &bt BT_SEL 4    &to MOUSE      &kp C_MUTE  &kp C_NEXT
            &bt BT_CLR_ALL  &kp F6     &kp F7      &kp F8       &bt BT_SEL 1      &bt BT_SEL 3   &trans          &kp C_BRI_UP   &kp C_VOL_UP  &kp C_PP
            &kp F9          &kp F10    &kp F11     &kp F12      &bootloader       &trans         &trans          &kp C_BRI_DEC  &kp C_VOL_DN &kp C_PREV
                                                   &kp ESC      &kp SPACE         &kp BSPC       &kp ENTER
            >;
        };

   
        mouse_layer {  // 4
	          bindings = <
       &kp PG_UP  &kp HOME  &kp UP &kp END &kp CAPS 		                        &kp ESC            &mkp LCLK        &mkp MCLK       &mkp RCLK         &mkp MCLK 
       &kp LEFT   &kp DOWN  &kp UP &kp RIGHT &kp ENTER  	                      &mmv MOVE_LEFT     &mmv MOVE_DOWN   &mmv MOVE_UP    &mmv MOVE_RIGHT   &mkp LCLK
       &mkp LCLK  &mkp MCLK  &mkp RCLK &kp K_VOL_UP  &trans                     &trans             &kp HOME         &kp PG_DN       &kp PG_UP         &kp END
                                         &trans     &trans                        &to 0     &to 0
            >;
	      };
  };
};
